---
//codigo server side only - momento de construccion
import type { GetStaticPaths } from "astro";
import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";
import Title from "../../components/shared/Title.astro";

import Layout from "../../layouts/Layout.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
    const { results } = (await resp.json()) as PokemonListResponse;

    return paginate(results, { pageSize: 20 });
}) satisfies GetStaticPaths;

const title = "Pokemon static | Home";
const { page } = Astro.props;
---

<Layout title={title}>
    <Title>Listado paginado de Pokémons</Title>

    <section
        aria-label="Listado de Pokémons"
        class="grid grid-cols-1 sm:grid-cols-4 md:grid-cols-5 gap-4 mt-5"
    >
        {
            page.data.map(({ name, url }) => (
                <PokemonCard name={name} url={url} />
            ))
        }
    </section>

    <section class="flex mt-10 ml-5 gap-2 items-center">
        <!-- {
        page.url.prev && (
          <a class="btn" href={page.url.prev}>
            Anteriores
          </a>
        )
      } -->
        <a
            class:list={[
                "btn",
                {
                    disabled: !page.url.prev,
                },
            ]}
            href={page.url.prev}
        >
            Anteriores
        </a>

        <a
            class:list={[
                "btn",
                {
                    disabled: !page.url.next,
                },
            ]}
            href={page.url.next}>Siguientes</a
        >

        <div class="flex flex-1"></div>

        <span class="text-xl font-bold">Página {page.currentPage}</span>
    </section>
</Layout>

<style>
    .btn {
        @apply bg-blue-500 p-2 text-white rounded-md;
    }

    .disabled {
        @apply bg-gray-600 text-gray-400;
    }
</style>
